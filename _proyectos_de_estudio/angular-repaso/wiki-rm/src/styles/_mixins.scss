/*
 * MIXINS GLOBALES - Utilidades SCSS Reutilizables
 * 
 * Colecci√≥n de mixins para funcionalidades comunes:
 * - Layout y contenedores
 * - Responsive design
 * - Efectos visuales (sombras, hover states)
 * - Typography helpers
 * - Animaciones y transiciones
 * - Accesibilidad
 * 
 * IMPORTANTE: Sigue la nueva especificaci√≥n Sass 2025 para evitar warnings.
 * Los mixins que contienen reglas anidadas deben usarse antes que las propiedades simples.
 */

@use "variables" as *;

// ================================
// üì¶ LAYOUT Y CONTENEDORES
// ================================

@mixin container($max-width: $container-max) {
  max-width: $max-width;
  margin: 0 auto;
  padding-left: $spacing-md;
  padding-right: $spacing-md;

  @media (max-width: $breakpoint-md) {
    padding-left: $spacing-sm;
    padding-right: $spacing-sm;
  }
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin grid-auto-fit($min-width: 250px, $gap: $spacing-lg) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

// ================================
// üì± RESPONSIVE DESIGN
// ================================

@mixin media-up($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin media-down($breakpoint) {
  @media (max-width: #{$breakpoint - 1px}) {
    @content;
  }
}

@mixin media-between($min, $max) {
  @media (min-width: #{$min}) and (max-width: #{$max - 1px}) {
    @content;
  }
}

// Mixins espec√≠ficos para breakpoints comunes
@mixin mobile-only {
  @include media-down($breakpoint-md) {
    @content;
  }
}

@mixin tablet-up {
  @include media-up($breakpoint-md) {
    @content;
  }
}

@mixin desktop-up {
  @include media-up($breakpoint-lg) {
    @content;
  }
}

// ================================
// üé® EFECTOS VISUALES
// ================================

@mixin card-shadow($level: "default") {
  @if $level == "none" {
    box-shadow: $shadow-none;
  } @else if $level == "sm" {
    box-shadow: $shadow-sm;
  } @else if $level == "default" {
    box-shadow: $shadow;
  } @else if $level == "md" {
    box-shadow: $shadow-md;
  } @else if $level == "lg" {
    box-shadow: $shadow-lg;
  } @else if $level == "xl" {
    box-shadow: $shadow-xl;
  }

  transition: box-shadow $transition-normal $easing-ease-out;
}

@mixin hover-lift($translate: -2px, $shadow: $shadow-lg) {
  transition: all $transition-normal $easing-ease-out;

  &:hover {
    transform: translateY($translate);
    box-shadow: $shadow;
  }
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border: $border-width solid transparent;
  border-radius: $border-radius;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal $easing-ease-out;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $primary-gradient;
  color: $text-white;

  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }

  &:active {
    transform: translateY(0);
  }
}

// ================================
// üìù TIPOGRAF√çA
// ================================

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 3) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin heading-base {
  font-weight: $font-weight-semibold;
  line-height: $line-height-tight;
  color: $text-color;
  margin-bottom: $spacing-md;
}

@mixin heading-1 {
  @include heading-base;
  font-size: $font-size-4xl;

  @include mobile-only {
    font-size: $font-size-3xl;
  }
}

@mixin heading-2 {
  @include heading-base;
  font-size: $font-size-3xl;

  @include mobile-only {
    font-size: $font-size-2xl;
  }
}

@mixin heading-3 {
  @include heading-base;
  font-size: $font-size-2xl;

  @include mobile-only {
    font-size: $font-size-xl;
  }
}

// ================================
// ‚ö° ANIMACIONES
// ================================

@mixin fade-in($duration: $transition-normal) {
  opacity: 0;
  animation: fadeIn $duration $easing-ease-out forwards;
}

@mixin slide-up($duration: $transition-normal, $distance: 30px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideUp $duration $easing-ease-out forwards;
}

@mixin stagger-animation($delay-base: 0.1s, $max-items: 6) {
  @for $i from 1 through $max-items {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * $delay-base};
    }
  }
}

// ================================
// ‚ôø ACCESIBILIDAD
// ================================

@mixin focus-outline($color: $primary-color, $offset: 2px) {
  &:focus {
    outline: 2px solid $color;
    outline-offset: $offset;
  }

  &:focus:not(:focus-visible) {
    outline: none;
  }
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin high-contrast-mode {
  @media (prefers-contrast: high) {
    @content;
  }
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// ================================
// üñ®Ô∏è PRINT STYLES
// ================================

@mixin print-friendly {
  @media print {
    @content;
  }
}

@mixin print-base-styles {
  background: white !important;
  color: black !important;
  box-shadow: none !important;
  text-shadow: none !important;
}

@mixin print-hide {
  @media print {
    display: none !important;
  }
}

// ================================
// üîß UTILIDADES T√âCNICAS
// ================================

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin aspect-ratio($width: 16, $height: 9) {
  aspect-ratio: $width / $height;

  // Fallback para navegadores que no soportan aspect-ratio
  @supports not (aspect-ratio: 1) {
    &::before {
      content: "";
      display: block;
      padding-bottom: percentage($height / $width);
    }
  }
}
